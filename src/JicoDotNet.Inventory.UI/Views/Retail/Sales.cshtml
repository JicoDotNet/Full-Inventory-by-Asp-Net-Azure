@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@using JicoDotNet.Inventory.Core.Enumeration
@using JicoDotNet.Inventory.Core.Models
@using JicoDotNet.Inventory.UI.Models;
@model RetailModels

@{
    ViewBag.Title = "Retail Sales";
    ViewBag.Page = "/Retail/Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Retail Sales</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Retail")">Retail</a></li>
                    <li class="breadcrumb-item active">Sales</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-danger">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title">
                            Retail Sales
                        </h3>
                    </div>
                    @using (Html.BeginForm("Sales", "Retail", FormMethod.Post, new { autocomplete = "off", id = "formRetailSales" }))
                    {
                        <div class="card-footer">
                            <div class="float-right">
                                <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                                <button type="reset" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 d-none d-lg-block">
                                    <div class="form-group">
                                        <label>Retail Counter of</label>
                                        <input type="hidden" name="IsGstAllowed" value="@Model._company.IsGSTRegistered.ToString().ToLower()" />
                                        <input class="form-control form-control-sm" value="@Model._company.CompanyName" style="width:100%;" disabled readonly />
                                        <input type="hidden" name="StateCode" value="@Model._company.StateCode" />
                                    </div>
                                </div>
                                <div class="col-md-4 d-none d-lg-block">
                                    <div class="form-group">
                                        <label>GST Number</label>
                                        @if (Model._company.IsGSTRegistered)
                                        {
                                            <input type="text" class="form-control form-control-sm" value="@Model._company.GSTNumber" style="width:100%;" disabled readonly />
                                        }
                                        else
                                        {
                                            <br />
                                            <span class="badge badge-danger">GST Unregistered</span>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-4 d-none d-lg-block">
                                    <div class="form-group">
                                        <label>Retail Sales Date</label>
                                        <small>Day/Month/Year</small>
                                        <input type="text" name="ShipmentDate" class="form-control form-control-sm"
                                               placeholder="Sales Order Date" required data-mask readonly data-mindate="@Model._dateLimit.ToDateMaskString()"
                                               value="@GenericLogic.IstNow.ToDateMaskString()" />
                                    </div>
                                </div>
                            </div>
                            <hr class="d-none d-lg-block" />
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Customer Mobile</label>
                                        <input type="text" name="Mobile" class="form-control form-control-sm"
                                               title="Indian Mobile number" pattern="^\d{10}$"
                                               autocomplete="off"
                                               maxlength="10" required placeholder="Customer's Mobile" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Customer/Company Name</label>
                                        <span class="float-right"><a href="javascript: void(0);" onclick="CustomerAllField();">Fill All Details</a></span>
                                        <input type="text" name="CompanyName" autocomplete="off"
                                               class="form-control form-control-sm"
                                               placeholder="Customer's Name" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label>GST Registred</label><br />
                                                <input type="checkbox" onchange="$('[name=\'IsGSTRegistered\']').val($(this).is(':checked')); gstRegistrationChange();"
                                                       data-bootstrap-switch
                                                       data-on-text="Yes"
                                                       data-off-text="No"
                                                       data-off-color="warning"
                                                       data-on-color="success">
                                                <input type="hidden" name="IsGSTRegistered" value="false" />
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            <div class="form-group">
                                                <label>GST Number</label>
                                                <input type="text" name="GSTNumber" maxlength="15"
                                                       onblur="this.value =  this.value.toUpperCase();"
                                                       pattern="[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}"
                                                       class="form-control form-control-sm" placeholder="Enter GST Number">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row d-none" data-customer="all">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Customer/Company Type</label>
                                        <select class="form-control form-control-sm" name="CompanyType">
                                            @for (int i = 0; i < Model._companyType.Count; i++)
                                            {
                                                <option value="@Model._companyType.Keys.ElementAt(i)">
                                                    @Model._companyType[Model._companyType.Keys.ElementAt(i)]
                                                </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Email</label>
                                        <input type="email" name="Email" maxlength="60"
                                               class="form-control form-control-sm" placeholder="Email Address">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>PAN Number</label>
                                        <input type="text" name="PANNumber" maxlength="15"
                                               class="form-control form-control-sm" placeholder="Enter PAN Number">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Contact Person</label>
                                        <input type="text" name="ContactPerson" maxlength="60"
                                               class="form-control form-control-sm" placeholder="Contact Person">
                                    </div>
                                </div>
                            </div>
                            <hr />
                            @Html.Action("Bind", "Custom", new { id = Html.UrlIdEncrypt(ECustomPropertyFor.RetailSalesInvoice, false) })
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Retail Counter</label>
                                        <select class="form-control form-control-sm" name="WareHouseId" onchange="javascript: WarehouseChange(this); return false;" required>
                                            <option value="">--Please Select--</option>
                                            @foreach (WareHouse wareHouse in Model._wareHouses)
                                            {
                                                <option value="@wareHouse.WareHouseId">
                                                    @wareHouse.WareHouseName of @wareHouse.BranchName
                                                    @if (!string.IsNullOrEmpty(wareHouse.BranchCode))
                                                    {<text>(@wareHouse.BranchCode)</text>}
                                                </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Remarks</label>
                                        <textarea name="Remarks" class="form-control form-control-sm" placeholder="Enter Remarks" style="height:38px;">@Model._config.RetailRemarks</textarea>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-4">
                                    <label>
                                        Product Details
                                        <span class="pull-right" data-toggle="tooltip" data-placement="top" title="requried">&nbsp;&nbsp;<i class="fas fa-asterisk text-danger"></i></span>
                                    </label>
                                </div>
                                <div class="col-md-8"></div>
                                <div class="col-md-12">
                                    <div class="card card-success">
                                        <div class="card-header bg-teal">
                                            <h3 class="card-title">Products Details</h3>
                                            <div class="card-tools">
                                                <button type="button" class="btn btn-tool btn btn-outline-warning btn-flat" onclick="RepeatRow();"
                                                        style="background-color: #ffc107; color: #fff;"
                                                        data-toggle="tooltip" data-placement="top" title="Add New Item">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <input type="hidden" value="0" data-tableSalesOrderDetails="count" />
                                        <div class="card-body table-responsive p-0" style="overflow-x:scroll;" data-tableSalesOrderDetails="items">
                                            <p class="text-center mb-0 m-2">Please select a retail counter</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top:15px;">
                                <div class="col-md-7"></div>
                                <div class="col-md-5">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label>Order Amount</label><br />
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text" data-CurrencySymbol>#</span>
                                                    </div>
                                                    <input type="text" name="SalesOrderAmount"
                                                           class="form-control form-control-sm" value="0.0"
                                                           placeholder="Order Amount" readonly />
                                                </div>
                                            </div>
                                        </div>
                                        @if (Model._company.IsGSTRegistered)
                                        {
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label>Order Tax Amount</label>
                                                    <div class="input-group">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text" data-CurrencySymbol>#</span>
                                                        </div>
                                                        <input type="text" name="SalesOrderTaxAmount"
                                                               class="form-control form-control-sm" value="0.0"
                                                               placeholder="Order Tax Amount" readonly />
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label>Order Total Amount</label>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text" data-CurrencySymbol>#</span>
                                                    </div>
                                                    <input type="text" name="SalesOrderTotalAmount"
                                                           class="form-control form-control-sm" value="0.0"
                                                           placeholder="Order Total Amount" readonly />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                            <button type="reset" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@section BodyScript{
    <script src="~/Content/js/gridCalculation.js"></script>
    <script type="text/javascript">
        var ProductObj = [];
        $(document).ready(function () {
            $('input.form-control-sm, select.form-control-sm').parent('div.input-group').children('div.input-group-prepend, div.input-group-append').css("height", "31px");
            $('span[data-CurrencySymbol]').html('@(Model._config.CurrencySymbol)');

            // Get Products
            $.ajax({
                url: '@Url.Action("Out", "Product")',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    ProductObj = data;
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('[data-tableSalesOrderDetails="items"]').html('<p class="text-center text-danger mb-0 m-2">Error occurred- ' + textStatus + ' : ' + errorThrown + '</p>');
                }
            });

            //Form Submission
            $('form#formRetailSales').submit(function () {
                var TRs = $('[data-tableSalesOrderDetails="items"] [data-tableSalesOrderDetails] tr');
                for (var i = 0; i < TRs.length; i++) {
                    var controls = $(TRs[i]).find('[data-name]');
                    for (var j = 0; j < controls.length; j++) {
                        $(controls[j]).attr('name', 'ShipmentDirectDetails[' + i + '].' + $(controls[j]).data('name'));
                    }
                }
                return true;
            });
        });

        function gstRegistrationChange() {
            var selected = $('input[name="IsGSTRegistered"]').val();
            if (selected == "true") {
                $('input[name="GSTNumber"]').parent('div').removeClass('d-none');
                $('input[name="GSTNumber"]').prop('required', true);
                $('input[name="GSTNumber"]').removeAttr('disabled');
            }
            else {
                $('input[name="GSTNumber"]').parent('div').addClass('d-none');
                $('input[name="GSTNumber"]').removeAttr('required');
                $('input[name="GSTNumber"]').val('');
                $('input[name="GSTNumber"]').attr('disabled', true);
            }
        }

        function CustomerAllField() {
            if ($('[data-customer="all"]').hasClass('d-none'))
                $('[data-customer="all"]').removeClass('d-none');
            else
                $('[data-customer="all"]').addClass('d-none');
        }

        function RepeatRow() {
            var html = $('#d').html();
            html = '<tr>' + html + '</tr>';
            $('#d').parent('tbody').append(html);
            $('[data-toggle="tooltip"]').tooltip();
            attachAutocomplete();
            $('#d').parent('tbody').find('tr:last').find('.productAutocomplete').focus();
            StockDetail($('#d').parent('tbody').find('tr:last').find('.productAutocomplete'), {});
        }
        function DeleteRow(e) {
            if ($('tbody >tr').length > 1) {
                $(e).parent('td').parent('tr').remove().fadeOut();
                TotalCalculate();
            }
        }

        function ProductChange(e, product) {
            // UnitOfMeasureName
            $(e).parents('tr').find('span[data-UnitOfMeasureName]').html(product.UnitOfMeasureName);
            $(e).parents('tr').find('input[data-UnitOfMeasureName]').val(product.UnitOfMeasureName);

            // Product Id
            $(e).parents('tr').find('input[data-name="ProductId"]').val(product.ProductId);

            // Product Name as value
            $(e).parents('tr').find('input[data-name="ProductName"]').val(product.value);

            // HSNSAC
            $(e).parents('tr').find('input[data-HSNSAC]').val(product.HSNSAC);

            // Description
            $(e).parents('tr').find('input[data-Description]').val(product.Description);

            // TaxPercentage
            $(e).parents('tr').find('input[data-name="TaxPercentage"]').val(product.TaxPercentage);

            // Sale Price
            $(e).parents('tr').find('input[data-name="Amount"]').val(product.SalePrice);
            $(e).parents('tr').find('input[data-name="Amount"]').blur();

            StockDetail(e, product);
        }

        function StockDetail(e, product) {
            var WareHouseId = $('[name="WareHouseId"]').val();
            var ProductId = (product != undefined && product != null) ? (product.ProductId != undefined ? product.ProductId : '') : '';
            if (WareHouseId != '' && product.IsGoods) {
                var url = '@Url.Action("PartialStockDetailRetail", "Retail")/' + escape(btoa(WareHouseId)) + '/' + ProductId;
                $.ajax({
                    url: url,
                    type: "GET",
                    dataType: "html",
                    success: function (data) {
                        $(e).parents('tr').find('[data-stock="Details"]').html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        $(e).parents('tr').find('[data-stock="Details"]').html('<select class="form-control form-control-sm"><option>' + errorThrown + '</option></select>');
                    }
                });
            }
            else{
                $(e).parents('tr').find('[data-stock="Details"]').html('<input type="hidden" data-name="StockDetailId" name="StockDetailId" value="0" />');
            }
        }

        function WarehouseChange(e) {
            if ($(e).val() == '') {
                $('[data-tableSalesOrderDetails="items"]').html('<p class="text-center mb-0 m-2">Please select a retail counter</p>');
                return false;
            }
            $('[data-tableSalesOrderDetails="items"]').html('<div class="overlay text-center m-4"><i class="fas fa-sync-alt fa-spin fa-2x"></i></div>');
            var url = '@(Url.Action("RetailItems", "Retail", new { Gst = Model._company.IsGSTRegistered? 1 : 0 }))';
            $.ajax({
                url: url,
                type: "GET",
                dataType: "html",
                success: function (data) {
                    $('[data-tableSalesOrderDetails="items"]').html(data);
                    attachAutocomplete();
                    TotalCalculate();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('[data-tableSalesOrderDetails="items"]').html('<p class="text-center text-danger mb-0 m-2">Error occurred- ' + textStatus + ' : ' + errorThrown + '</p>');
                }
            });
        }

        function StockDetailChange(e) {
            if ($(e).val() != '') {
                var selectedOpt = $(e.options[e.selectedIndex]);
                var stk = selectedOpt.data('stock');
                if (stk == undefined || isNaN(stk) || stk < 0) {
                    stk = 0;
                }
                $(e).closest('td').find('input[data-name="Quantity"]').attr('max', stk);
                // attribute
                $(e).closest('td').find('input[data-name="IsPerishable"]').val(selectedOpt.data('IsPerishable'.toLowerCase()));
                $(e).closest('td').find('input[data-name="ExpiryDate"]').val(selectedOpt.data('ExpiryDate'.toLowerCase()));
                $(e).closest('td').find('input[data-name="BatchNo"]').val(selectedOpt.data('BatchNo'.toLowerCase()));
            }
            else {
                $(e).closest('td').find('input[data-name="Quantity"]').attr('max', '0');
            }
        }

        function AmountCalculate(e) {
            var thisName = $(e).data('name');
            var PriceObj = {};
            var isGSTRegistered = $('input[name="IsGstAllowed"]').val() == 'true';
            PriceObj.TaxPercentage = 0;
            PriceObj.TaxAmount = 0;

            PriceObj.Amount = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Amount"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Amount"]').val());
            PriceObj.DiscountPercentage = isNaN(parseFloat($(e).parents('tr').find('input[data-name="DiscountPercentage"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="DiscountPercentage"]').val());
            PriceObj.DiscountAmount = isNaN(parseFloat($(e).parents('tr').find('input[data-name="DiscountAmount"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="DiscountAmount"]').val());
            PriceObj.Price = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Price"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Price"]').val());
            PriceObj.Quantity = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Quantity"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Quantity"]').val());
            PriceObj.SubTotal = isNaN(parseFloat($(e).parents('tr').find('input[data-name="SubTotal"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="SubTotal"]').val());
            if (isGSTRegistered) {
                PriceObj.TaxPercentage = isNaN(parseFloat($(e).parents('tr').find('input[data-name="TaxPercentage"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="TaxPercentage"]').val());
                PriceObj.TaxAmount = isNaN(parseFloat($(e).parents('tr').find('input[data-name="TaxAmount"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="TaxAmount"]').val());
            }
            PriceObj.Total = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Total"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Total"]').val());

            PriceObj = Calculation(PriceObj, thisName);

            $(e).parents('tr').find('input[data-name="Total"]').val(parseFloat(PriceObj.Total.toFixed(5)));
            $(e).parents('tr').find('input[data-name="TaxAmount"]').val(parseFloat(PriceObj.TaxAmount.toFixed(5)));
            $(e).parents('tr').find('input[data-name="TaxPercentage"]').val(PriceObj.TaxPercentage); // same
            $(e).parents('tr').find('input[data-name="SubTotal"]').val(parseFloat(PriceObj.SubTotal.toFixed(5)));
            $(e).parents('tr').find('input[data-name="Quantity"]').val(PriceObj.Quantity); // same
            $(e).parents('tr').find('input[data-name="Price"]').val(parseFloat(PriceObj.Price.toFixed(5)));
            $(e).parents('tr').find('input[data-name="DiscountPercentage"]').val(parseFloat(PriceObj.DiscountPercentage.toFixed(5)));
            $(e).parents('tr').find('input[data-name="DiscountAmount"]').val(parseFloat(PriceObj.DiscountAmount.toFixed(5)));
            $(e).parents('tr').find('input[data-name="Amount"]').val(PriceObj.Amount); // same

            TotalCalculate();
        }

        function TotalCalculate() {
            var trs = $('[data-tableSalesOrderDetails]').children('tr');
            var SalesOrderAmount = 0.0;
            var SalesOrderTaxAmount = 0.0;
            var SalesOrderTotalAmount = 0.0;
            for (var i = 0; i < trs.length; i++) {
                SalesOrderAmount = SalesOrderAmount + parseFloat($(trs[i]).find('[name="SubTotal"]').val());
                SalesOrderTaxAmount = SalesOrderTaxAmount + parseFloat($(trs[i]).find('[name="TaxAmount"]').val());
                SalesOrderTotalAmount = SalesOrderTotalAmount + parseFloat($(trs[i]).find('[name="Total"]').val());
            }
            SalesOrderAmount = isNaN(SalesOrderAmount) ? 0.0 : SalesOrderAmount;
            SalesOrderTaxAmount = isNaN(SalesOrderTaxAmount) ? 0.0 : SalesOrderTaxAmount;
            SalesOrderTotalAmount = isNaN(SalesOrderTotalAmount) ? 0.0 : SalesOrderTotalAmount;
            $('[name="SalesOrderAmount"]').val(parseFloat(SalesOrderAmount.toFixed(5)));
            $('[name="SalesOrderTaxAmount"]').val(parseFloat(SalesOrderTaxAmount.toFixed(5)));
            $('[name="SalesOrderTotalAmount"]').val(parseFloat(SalesOrderTotalAmount.toFixed(5)));

            // Tax Field Hide/Show
            if ($('input[name="IsGstAllowed"]').val() == 'true')
                $('input[name="SalesOrderTaxAmount"]').parent().parent().show();
            else if ($('input[name="IsGstAllowed"]').val() == 'false')
                $('input[name="SalesOrderTaxAmount"]').parent().parent().hide();
            else {
                $('[name="PurchaseOrderTaxAmount"]').val('Something Wrong');
                $('input[name="SalesOrderTaxAmount"]').parent().parent().show();
            }
        }

        function attachAutocomplete() {
            $('input.productAutocomplete').autocomplete({
                source: ProductObj,
                autoFocus: true,
                select: function (event, ui) {
                    ProductChange(this, ui.item);
                }
            });
        }

        $("input[data-bootstrap-switch]").each(function () {
            $(this).bootstrapSwitch('state', $(this).prop('checked'));
        });
    </script>
}