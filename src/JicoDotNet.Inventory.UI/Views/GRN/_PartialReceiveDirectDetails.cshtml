@using JicoDotNet.Inventory.UI.Models;
@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@model GoodsReceiveNoteModels

<div class="col-md-2">
    <div class="form-group">
        <label>HSN/SAC</label>
        <input type="text" name="GoodsReceiveNoteDirectDetails[@Model._len].HSNSAC" value="@Model._product.HSNSAC" maxlength="8"
               class="form-control form-control-sm" placeholder="HSN/SAC Code" />
    </div>
    <div class="form-group">
        <label>Note</label>
        <input type="text" name="GoodsReceiveNoteDirectDetails[@Model._len].Description" value="@Model._product.Description" maxlength="125"
               class="form-control form-control-sm" placeholder="Note" />
    </div>
</div>
<!--
<div class="col-md-2">
    <div class="form-group">
        <label>Amount</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" data-CurrencySymbol>#</span>
            </div>
            <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].Amount" class="form-control form-control-sm"
                   onblur="AmountCalculate(this);" step="0.0000000000000001" value="@Model._product.PurchasePrice.ToDisplayDecimal()"
                   data-name="Amount"
                   placeholder="Amount" required />
        </div>
    </div>
    <div class="form-group">
        <label>Discount</label>
        <div class="input-group">
            <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].DiscountPercentage"
                   class="form-control form-control-sm" value="0.0"
                   step="0.0000000000000001"
                   onblur="AmountCalculate(this);"
                   data-name="TaxPercentage"
                   placeholder="(%)" />
            <div class="input-group-append">
                <span class="input-group-text">%</span>
            </div>
        </div>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" data-CurrencySymbol>#</span>
            </div>
            <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].DiscountAmount" value="0.0"
                   class="form-control form-control-sm"
                   step="0.0000000000000001"
                   data-name="TaxAmount"
                   onblur="AmountCalculate(this);"
                   placeholder="Amount" />
        </div>
    </div>
<div>
-->
<div class="col-md-3">
    <div class="form-group">
        <label>Price</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" data-CurrencySymbol>#</span>
            </div>
            <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].Price" 
                   value="@Model._product.PurchasePrice.ToDisplayDecimal()"
                   class="form-control form-control-sm" step="0.0000000000000001"
                   onblur="AmountCalculate(this, @Model._len);"
                   data-name="Price"
                   placeholder="Price" required />
        </div>
    </div>
    <div class="form-group">
        <label>Receive Quantity</label>
        <div class="input-group">
            <input type="number" name="GoodsReceiveNoteDirectDetails[@Model._len].ReceivedQuantity"
                   class="form-control form-control-sm"
                   min="0" value="0"
                   onblur="AmountCalculate(this, @Model._len);"
                   step="0.0000001"
                   placeholder="Qty" />
            <div class="input-group-append" style="height: 31px;">
                <span class="input-group-text">@Model._product.UnitOfMeasureName</span>
            </div>
        </div>
    </div>
</div>
<div class="col-md-2">
    <div class="form-group">
        <label>Sub Total</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" data-CurrencySymbol>#</span>
            </div>
            <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].SubTotal" 
                   class="form-control form-control-sm" 
                   value="@Model._product.PurchasePrice.ToDisplayDecimal()"
                   onblur="AmountCalculate(this, @Model._len);" 
                   step="0.0000000000000001"
                   data-name="SubTotal"
                   placeholder="Sub Total" required />
        </div>
    </div>

    <!-- Here "ProductInOut" Prop treat as GST applicable or not, 
        to avoid declare extra property & extra memory allocation (GRNController/ReceiveDirectProduct) -->
    @if (Model._product.ProductInOut > 0)
    {
        <div class="form-group">
            <label>Tax</label>
            <div class="input-group">
                <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].TaxPercentage" 
                       value="@Model._product.TaxPercentage.ToDisplayDecimal()"
                       class="form-control form-control-sm"
                       step="0.0000000000000001"
                       onblur="AmountCalculate(this, @Model._len);" 
                       data-name="TaxPercentage"
                       placeholder="(%)" />
                <div class="input-group-append">
                    <span class="input-group-text">%</span>
                </div>
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text" data-CurrencySymbol>#</span>
                </div>
                <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].TaxAmount"
                       class="form-control form-control-sm"
                       step="0.0000000000000001"
                       data-name="TaxAmount"
                       onblur="AmountCalculate(this, @Model._len);" 
                       placeholder="Amount" />
            </div>
        </div>
    }
</div>
<div class="col-md-2">
    <div class="form-group">
        <label>Total</label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" data-CurrencySymbol>#</span>
            </div>
            <input type="number" min="0" name="GoodsReceiveNoteDirectDetails[@Model._len].Total" 
                   class="form-control form-control-sm"
                   onblur="AmountCalculate(this, @Model._len);" 
                   step="0.0000000000000001"
                   data-name="Total"
                   placeholder="Total" required />
        </div>
    </div>
</div>
<div class="col-md-3">
    @if (Model._product.HasBatchNo)
    {
        <div class="form-group">
            <label>Batch Number</label>
            <input type="text" name="GoodsReceiveNoteDirectDetails[@Model._len].BatchNo"
                   class="form-control form-control-sm" placeholder="Batch Number" />
        </div>
    }
    @if (Model._product.HasExpirationDate)
    {
        <div class="form-group">
            <label>Expiry Date</label>
            <input type="text" name="GoodsReceiveNoteDirectDetails[@Model._len].ExpiryDate"
                   class="form-control form-control-sm" placeholder="Expiery Date" data-mask readonly />
        </div>
    }
    @if (Model._product.IsPerishableProduct)
    {
        <input type="hidden" name="GoodsReceiveNoteDirectDetails[@Model._len].IsPerishable"
               value="@Model._product.IsPerishableProduct.ToString().ToLower()" readonly />
        <span class="text-danger">Perishable Product</span>
    }
</div>

<script type="text/javascript">
    try {
        $('input.form-control-sm, select.form-control-sm').parent('div.input-group').children('div.input-group-prepend, div.input-group-append').css("height", "31px");
        LoadInputDate();
        $('span[data-CurrencySymbol]').html(CurrencySymbol);
    } catch (e) { console.log(); }
</script>