@using JicoDotNet.Inventory.UI.Models;
@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@using JicoDotNet.Inventory.Core.Models
@model GoodsReceiveNoteModels

@{
    ViewBag.Title = "Purchased Goods Return";
    ViewBag.Page = "/GRN/Return";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}


<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Purchased Goods Return</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "GRN")">Goods Receive</a></li>
                    <li class="breadcrumb-item active">Goods Return</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-danger">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title">
                            Goods Received @if (Model._purchaseOrder != null)
                            {<text> for PO - <strong>@Model._purchaseOrder.PurchaseOrderNumber</strong> </text>}
                        </h3>
                    </div>
                    @using (Html.BeginForm("Return", "GRN",
                            FormMethod.Post, new { autocomplete = "off", id = "formGRNReceive" }))
                    {
                        if (Model._purchaseOrder != null)
                        {
                            <div class="card-footer">
                                <div class="float-md-right">
                                    <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                                    <a href="@Url.Action("Index", "GRN", new { id = string.Empty })" class="btn btn-danger"> <i class="fas fa-times"></i> Cancel</a>
                                    <button type="reset" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                                </div>
                            </div>
                        }
                <div class="card-body">
                    <div class="row">
                        @if (Model._goodsReceiveNotes != null)
                        {
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Purchase & GRN Order</label>
                                    <select class="form-control form-control-sm select2"
                                            name="PurchaseOrderId"
                                            onchange="location.href='@Url.Action("Return", "GRN", new { id = string.Empty })/' + escape(btoa(this.value))"
                                            required style="width:100%;">
                                        <option value="">-- Select --</option>
                                        @foreach (GoodsReceiveNote grn in Model._goodsReceiveNotes)
                                        {
                                            <option value="@grn.GRNId">
                                                @grn.GRNNumber - @grn.PurchaseOrderNumber
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                        @if (Model._purchaseOrder != null)
                        {
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>PO Number & Date</label><br />
                                    @Model._purchaseOrder.PurchaseOrderNumber<br />
                                    @Model._purchaseOrder.PurchaseOrderDate.ToDisplayShortDateString()
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>GRN Number & Date</label><br />
                                    @Model._goodsReceiveNote.GRNNumber<br />
                                    @Model._goodsReceiveNote.GRNDate.ToDisplayShortDateString()
                                </div>
                            </div>
                            <div class="col-5 col-md-3">
                                <div class="form-group">
                                    <label>Full Return</label><br />
                                    <input type="checkbox" onchange="javascript: FullReturnedChange(this);"
                                           data-bootstrap-switch
                                           data-on-text="Yes"
                                           data-off-text="No"
                                           data-off-color="danger"
                                           data-on-color="success">
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-6"></div>
                        }
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Purchase Return Date</label>
                                <small>Day/Month/Year</small>
                                <input type="text" name="PurchaseReturnDate" class="form-control form-control-sm"
                                       placeholder="Goods Return Date" required data-mask readonly
                                       value="@GenericLogic.IstNow.ToDateMaskString()" />
                            </div>
                        </div>
                    </div>
                    @if (Model._purchaseOrder != null)
                    {
                        <hr />
                        <div class="d-none" style="display:none;">
                            <input type="hidden" name="IsFullReturned" value="false" />
                            <input type="hidden" value="@Model._goodsReceiveNote.GRNId" name="GRNId" />
                            <input type="hidden" value="@Model._purchaseOrder.PurchaseOrderId" name="PurchaseOrderId" />
                            <input type="hidden" value="@Model._goodsReceiveNote.WareHouseId" name="WareHouseId" />
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Warehouse</label>
                                    <select class="form-control" name="WareHouseId" required>
                                        <option value="">-- Select --</option>
                                        @foreach (WareHouse wareHouse in Model._wareHouses)
                                        {
                                            <option value="@wareHouse.WareHouseId">@wareHouse.WareHouseName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-md-12">
                                <div class="card card-success">
                                    <div class="card-header bg-teal">
                                        <h3 class="card-title">Received Products Details</h3>
                                    </div>
                                    <div class="card-body" style="overflow-x:scroll;">
                                        <table class="table table-striped table-bordered dt-responsive nowrap">
                                            <thead>
                                                <tr>
                                                    <th>Product Name/ Code<br /> HSN-SAC</th>
                                                    @if (Model._config.HasBatchNo || Model._config.HasExpirationDate || Model._config.HasPerishableProduct)
                                                    {
                                                        <th>Batch Number /<br />Expiery Date</th>
                                                    }
                                                    <th>Return Quantity</th>
                                                    <th>Received Note /<br />Return Remarks</th>
                                                </tr>
                                            </thead>
                                            <tbody data-tableGRNDetails>
                                                @for (int i = 0; i < Model._goodsReceiveNote.GoodsReceiveNoteDetails.Count; i++)
                                                {
                                                    if (Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ReceivedQuantity > 0)
                                                    {
                                                        PurchaseOrderDetail purchaseOrderDetail = Model._purchaseOrder.PurchaseOrderDetails.FirstOrDefault(a => a.PurchaseOrderDetailId == Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].PurchaseOrderDetailId);
                                                        if (purchaseOrderDetail != null)
                                                        {
                                                            <tr>
                                                                <td class="d-none">
                                                                    <input type="hidden" name="PurchaseReturnDetails[@i].ProductId"
                                                                           value="@purchaseOrderDetail.ProductId" />
                                                                    <input type="hidden" name="PurchaseReturnDetails[@i].PurchaseOrderDetailId"
                                                                           value="@purchaseOrderDetail.PurchaseOrderDetailId" />
                                                                    <input type="hidden" name="PurchaseReturnDetails[@i].GRNDetailId"
                                                                           value="@Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].GRNDetailId" />

                                                                    <input type="hidden" name="PurchaseReturnDetails[@i].IsPerishable" value="@Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].IsPerishable.ToString().ToLower()" />
                                                                    <input type="hidden" name="PurchaseReturnDetails[@i].ExpiryDate" value="@(Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ExpiryDate != null? Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ExpiryDate.Value.ToDateMaskString() : string.Empty)" />
                                                                    <input type="hidden" name="PurchaseReturnDetails[@i].BatchNo" value="@Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].BatchNo" />
                                                                </td>
                                                                <td>
                                                                    @purchaseOrderDetail.ProductName/
                                                                    @purchaseOrderDetail.ProductCode
                                                                    <br />
                                                                    @purchaseOrderDetail.HSNSAC
                                                                </td>
                                                                @if (Model._config.HasBatchNo || Model._config.HasExpirationDate || Model._config.HasPerishableProduct)
                                                                {
                                                                    <td>
                                                                        @if (!string.IsNullOrEmpty(Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].BatchNo))
                                                                        {
                                                                            <span>Batch: @Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].BatchNo</span><br />
                                                                        }
                                                                        @if (Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ExpiryDate != null)
                                                                        {
                                                                            <span>ExpiryDate: @(Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ExpiryDate.Value.ToDisplayShortDateString())</span><br />
                                                                        }
                                                                        @if (Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].IsPerishable)
                                                                        {
                                                                            <span class="text-danger">Perishable Product</span>
                                                                        }
                                                                    </td>
                                                                }
                                                                <td>
                                                                    <span class="text-danger">
                                                                        Received: @Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ReceivedQuantity.ToDisplayDecimal()
                                                                        @purchaseOrderDetail.UnitOfMeasureName
                                                                    </span>
                                                                    <br />
                                                                    <span>Previous Returned: </span>@*@Model._purchaseOrder.PurchaseOrderDetails[i].ReceivedQuantity.ToDisplayDecimal()
                                                        @Model._purchaseOrder.PurchaseOrderDetails[i].UnitOfMeasureName*@
                                                                    <div class="input-group" style="width:150px;">
                                                                        <input type="number" name="PurchaseReturnDetails[@i].ReturnedQuantity"
                                                                               class="form-control form-control-sm" data-ReturnedQuantity
                                                                               min="0" value="0"
                                                                               step="0.0000001" max="@Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].ReceivedQuantity"
                                                                               placeholder="Qty" />
                                                                        <div class="input-group-append" style="height: 31px;">
                                                                            <span class="input-group-text">@purchaseOrderDetail.UnitOfMeasureName</span>
                                                                        </div>
                                                                    </div>
                                                                </td>
                                                                <td>
                                                                    @Model._goodsReceiveNote.GoodsReceiveNoteDetails[i].Description
                                                                    <input type="text" name="PurchaseReturnDetails[@i].Description"
                                                                           class="form-control form-control-sm" placeholder="Return Remarks" />
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                        if (Model._purchaseOrder != null)
                        {
                            <div class="card-footer">
                                <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                                <a href="@Url.Action("Index", "GRN", new { id = string.Empty })" class="btn btn-danger"> <i class="fas fa-times"></i> Cancel</a>
                                <button type="reset" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                            </div>
                        }
                        else
                        {
                            <div class="card-footer">
                                <a href="@Url.Action("Index", "GRN", new { id = string.Empty })" class="btn btn-danger"> <i class="fas fa-times"></i> Cancel</a>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@section BodyScript{
    <script type="text/javascript">
        $('[data-bootstrap-switch]').bootstrapSwitch();
        function FullReturnedChange(e) {
            var Qtys = $('[data-tableGRNDetails]').find('[data-ReturnedQuantity]')
            for (var i = 0; i < Qtys.length; i++) {
                if ($(e).is(':checked')) {
                    $(Qtys[i]).attr('readonly', true);
                    $(Qtys[i]).val(parseFloat($(Qtys[i]).attr('max')));
                }
                else {
                    $(Qtys[i]).removeAttr('readonly');
                }
            }
            return false;
        }

        $(document).ready(function () {
            $('form#formGRNReceive').submit(function () {
                ReturnedValueChange();
                return true;
            });
        });

        function ReturnedValueChange() {
            var Qtys = $('[data-tableGRNDetails]').find('[data-ReturnedQuantity]');
            var IsFullReturned = true;
            for (var i = 0; i < Qtys.length; i++) {
                if (parseFloat($(Qtys[i]).val()) != parseFloat($(Qtys[i]).attr('max')))
                    IsFullReturned = false;
            }
            $('[name="IsFullReturned"]').val(IsFullReturned.toString().toLowerCase());
        }
    </script>
}