@using JicoDotNet.Inventory.UI.Models;
@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@model QuotationModels

@{
    ViewBag.Title = "Quotation Entry";
    ViewBag.Page = "/Quotation/Index";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Quotation Entry</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Quotation")"> Quotation</a></li>
                    <li class="breadcrumb-item active">Entry</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-danger">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title">
                            Quotation Entry
                        </h3>
                    </div>
                    @using (Html.BeginForm("Generate", "Quotation",
                     FormMethod.Post, new { autocomplete = "off", id = "formQO" }))
                    {
                        <div class="card-footer">
                            <div class="float-right">
                                <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                                <button type="reset" onclick="resetClient()" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Quotation Generated Company</label>
                                        <input type="hidden" name="IsGstAllowed" value="@Model._company.IsGSTRegistered.ToString().ToLower()" />
                                        <div>@Model._company.CompanyName</div>
                                        @if (Model._company.IsGSTRegistered)
                                        {
                                            <div>GST Number : @Model._company.GSTNumber</div>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Customer & GST Number</label>
                                        <select class="form-control form-control-sm" name="CustomerId" return false;" style="width:100%;" required>
                                            <option value="">--Please Select--</option>
                                            @for (int i = 0; i < Model._customers.Count; i++)
                                            {
                                                <option value="@Model._customers[i].CustomerId">
                                                    @Model._customers[i].CompanyName - @(((Model._customers[i].IsGSTRegistered) ? Model._customers[i].GSTNumber : "GST Unregistred"))
                                                </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Quotation Date</label>
                                        <small>Day/Month/Year</small>
                                        <input type="text" name="QuotationDate" class="form-control form-control-sm"
                                               placeholder="Quotation Date" required data-mask readonly
                                               value="@GenericLogic.IstNow.ToDateMaskString()" />
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <label>
                                        Product Details
                                        <span class="pull-right" data-toggle="tooltip" data-placement="top" title="requried">&nbsp;&nbsp;<i class="fas fa-asterisk text-danger"></i></span>
                                    </label>
                                    <div class="float-right">
                                        <button type="button" class="btn btn-tool btn btn-outline btn-flat" onclick="ProductSync();"
                                                style="background-color: #fff;color: #007bff;"
                                                data-toggle="tooltip" data-placement="top" title="Product Sync">
                                            <i class="fas fa-sync-alt"></i> Product Sync
                                        </button>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="card card-success">
                                        <div class="card-header bg-teal">
                                            <h3 class="card-title">Products Details</h3>
                                            <div class="card-tools">
                                                <button type="button" class="btn btn-tool btn btn-outline-warning btn-flat" onclick="RepeatRow();"
                                                        style="background-color: #ffc107; color: #fff;"
                                                        data-toggle="tooltip" data-placement="top" title="Add New Item">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <input type="hidden" value="0" data-tableQuotationDetails="count" />
                                        <div class="card-body table-responsive" style="overflow-x:scroll;" data-tableQuotationDetails="items">
                                            @if (Model._company.IsGSTRegistered)
                                            {
                                                @Html.Action("QuotationItems", "Quotation", new { Gst = 1 })
                                            }
                                            else
                                            {
                                                @Html.Action("QuotationItems", "Quotation", new { Gst = 0 })
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top:15px;">
                                <div class="col-md-7"></div>
                                <div class="col-md-5">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label>Order Amount</label>
                                                <input type="text" name="QuotationAmount"
                                                       class="form-control form-control-sm" value="0.0"
                                                       placeholder="Order Amount" readonly />
                                            </div>
                                        </div>
                                        <div class="col-md-12">
                                            @if (Model._company.IsGSTRegistered)
                                            {
                                                <div class="form-group grn-status">
                                                    <label>Order Tax Amount</label>
                                                    <input type="text" name="QuotationTaxAmount"
                                                           class="form-control form-control-sm" value="0.0"
                                                           placeholder="Order Tax Amount" readonly />
                                                </div>
                                            }
                                        </div>
                                        <div class="col-md-12">
                                            <div class="form-group">
                                                <label>Order Total Amount</label>
                                                <input type="text" name="QuotationTotalAmount"
                                                       class="form-control form-control-sm" value="0.0"
                                                       placeholder="Order Total Amount" readonly />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Terms & Conditions</label>
                                        <textarea name="TandC" class="form-control form-control-sm" 
                                                  placeholder="Terms & Conditions" 
                                                  style="height: 180px !important;">@Model._config.QuotationSendingTnC</textarea>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label>Remarks</label>
                                        <textarea name="Remarks" class="form-control form-control-sm" 
                                                  placeholder="Remarks" style="height: 180px !important;">@Model._config.QuotationSendingRemarks</textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                            <button type="reset" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@section BodyScript{
    <script src="~/Content/js/gridCalculation.js"></script>
    <script type="text/javascript">
        var ProductObj = [];
        var PurchaseOrderDetailsCount = 0;

        $(document).ready(function () {
            $('input.form-control-sm, select.form-control-sm').parent('div.input-group').children('div.input-group-prepend, div.input-group-append').css("height", "31px");
            $('span[data-CurrencySymbol]').html('@(Model._config.CurrencySymbol)');

            // Get Products
            GetProduct();

            //Form Submission
            $('form#formQO').submit(function () {
                var TRs = $("tbody[data-tableQuotationDetails] tr");
                for (var i = 0; i < TRs.length; i++) {
                    var controls = $(TRs[i]).find('[data-name]');
                    for (var j = 0; j < controls.length; j++) {
                        $(controls[j]).attr('name', 'QuotationDetails[' + i + '].' + $(controls[j]).data('name'));
                    }
                }
                return true;
            });
        });

        function GetProduct() {
            $.ajax({
                url: '@Url.Action("Out", "Product")',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    ProductObj = data;
                    attachAutocomplete();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    $('[data-tableQuotationDetails="items"]').html('<p class="text-center text-danger mb-0 m-2">Error occurred- ' + textStatus + ' : ' + errorThrown + '</p>');
                }
            });
        }

        function RepeatRow() {
            var html = $('#d').html();
            html = '<tr>' + html + '</tr>';
            $('#d').parent('tbody').append(html);
            $('[data-toggle="tooltip"]').tooltip();
            attachAutocomplete();
            $('#d').parent('tbody').find('tr:last').find('.productAutocomplete').focus();
        }
        function DeleteRow(e) {
            if ($('tbody >tr').length > 1) {
                $(e).parent('td').parent('tr').remove().fadeOut();
                TotalCalculate();
            }
        }
        function ProductChange(e, product) {
            // UnitOfMeasureName
            $(e).parents('tr').find('span[data-UnitOfMeasureName]').html(product.UnitOfMeasureName);
            $(e).parents('tr').find('input[data-UnitOfMeasureName]').val(product.UnitOfMeasureName);

            // Product Id
            $(e).parents('tr').find('input[data-name="ProductId"]').val(product.ProductId);

            // Product Name as value
            $(e).parents('tr').find('input[data-name="ProductName"]').val(product.value);

            // HSNSAC
            $(e).parents('tr').find('input[data-HSNSAC]').val(product.HSNSAC);

            // Description
            $(e).parents('tr').find('input[data-Description]').val(product.Description);

            // TaxPercentage
            $(e).parents('tr').find('input[data-name="TaxPercentage"]').val(product.TaxPercentage);

            // Sale Price
            $(e).parents('tr').find('input[data-name="Amount"]').val(product.SalePrice);
            $(e).parents('tr').find('input[data-name="Amount"]').blur();
        }
        function AmountCalculate(e) {
            var thisName = $(e).data('name');
            var PriceObj = {};
            var isGSTRegistered = $('input[name="IsGstAllowed"]').val() == 'true';
            PriceObj.TaxPercentage = 0;
            PriceObj.TaxAmount = 0;

            PriceObj.Amount = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Amount"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Amount"]').val());
            PriceObj.DiscountPercentage = isNaN(parseFloat($(e).parents('tr').find('input[data-name="DiscountPercentage"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="DiscountPercentage"]').val());
            PriceObj.DiscountAmount = isNaN(parseFloat($(e).parents('tr').find('input[data-name="DiscountAmount"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="DiscountAmount"]').val());
            PriceObj.Price = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Price"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Price"]').val());
            PriceObj.Quantity = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Quantity"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Quantity"]').val());
            PriceObj.SubTotal = isNaN(parseFloat($(e).parents('tr').find('input[data-name="SubTotal"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="SubTotal"]').val());
            if (isGSTRegistered) {
                PriceObj.TaxPercentage = isNaN(parseFloat($(e).parents('tr').find('input[data-name="TaxPercentage"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="TaxPercentage"]').val());
                PriceObj.TaxAmount = isNaN(parseFloat($(e).parents('tr').find('input[data-name="TaxAmount"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="TaxAmount"]').val());
            }
            PriceObj.Total = isNaN(parseFloat($(e).parents('tr').find('input[data-name="Total"]').val())) ? 0.0 : parseFloat($(e).parents('tr').find('input[data-name="Total"]').val());

            PriceObj = Calculation(PriceObj, thisName);

            $(e).parents('tr').find('input[data-name="Total"]').val(parseFloat(PriceObj.Total.toFixed(5)));
            $(e).parents('tr').find('input[data-name="TaxAmount"]').val(parseFloat(PriceObj.TaxAmount.toFixed(5)));
            $(e).parents('tr').find('input[data-name="TaxPercentage"]').val(PriceObj.TaxPercentage); // same
            $(e).parents('tr').find('input[data-name="SubTotal"]').val(parseFloat(PriceObj.SubTotal.toFixed(5)));
            $(e).parents('tr').find('input[data-name="Quantity"]').val(PriceObj.Quantity); // same
            $(e).parents('tr').find('input[data-name="Price"]').val(parseFloat(PriceObj.Price.toFixed(5)));
            $(e).parents('tr').find('input[data-name="DiscountPercentage"]').val(parseFloat(PriceObj.DiscountPercentage.toFixed(5)));
            $(e).parents('tr').find('input[data-name="DiscountAmount"]').val(parseFloat(PriceObj.DiscountAmount.toFixed(5)));
            $(e).parents('tr').find('input[data-name="Amount"]').val(PriceObj.Amount); // same

            TotalCalculate();
        }

        function TotalCalculate() {
            var trs = $('[data-tableQuotationDetails]').children('tr');
            var QuotationAmount = 0.0;
            var QuotationTaxAmount = 0.0;
            var QuotationTotalAmount = 0.0;
            for (var i = 0; i < trs.length; i++) {
                QuotationAmount = QuotationAmount + parseFloat($(trs[i]).find('[name="SubTotal"]').val());
                QuotationTaxAmount = QuotationTaxAmount + parseFloat($(trs[i]).find('[name="TaxAmount"]').val());
                QuotationTotalAmount = QuotationTotalAmount + parseFloat($(trs[i]).find('[name="Total"]').val());
            }
            $('input[name="QuotationAmount"]').val(parseFloat(QuotationAmount.toFixed(5)));
            $('input[name="QuotationTaxAmount"]').val(parseFloat(QuotationTaxAmount.toFixed(5)));
            $('input[name="QuotationTotalAmount"]').val(parseFloat(QuotationTotalAmount.toFixed(5)));

            // Tax Field Hide/Show
            if ($('input[name="IsGstAllowed"]').val() == 'true')
                $('input[name="QuotationTaxAmount"]').parent().parent().show();
            else if ($('input[name="IsGstAllowed"]').val() == 'false')
                $('input[name="QuotationTaxAmount"]').parent().parent().hide();
            else {
                $('input[name="QuotationTaxAmount"]').val('Something went Wrong');
                $('input[name="QuotationTaxAmount"]').parent().parent().show();
            }
        }

        function attachAutocomplete() {
            $('input.productAutocomplete').autocomplete({
                source: ProductObj,
                autoFocus: true,
                select: function (event, ui) {
                    ProductChange(this, ui.item);
                }
            });
        }

        function ProductSync() {
            GetProduct();
            toastr.success('Product Sync successful!!');
        }
    </script>
}