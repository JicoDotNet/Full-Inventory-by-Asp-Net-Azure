@using JicoDotNet.Inventory.UI.Models;
@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@using JicoDotNet.Inventory.Core.Models
@model StockModels

@{
    ViewBag.Title = "Current Stock";
    ViewBag.Page = "/Stock/Adjust";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Stock Adjustment</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active"><a href="@Url.Action("Current", "Stock")">Stock</a></li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-danger">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title">
                            Adjustment Details
                        </h3>
                    </div>
                    @using (Html.BeginForm("Adjust", "Stock",
                        FormMethod.Post, new { autocomplete = "off" }))
                    {
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Product Name/Code</label>
                                        <select class="form-control select2" name="ProductId" required
                                                onchange="GetProductPartial(); return false;">
                                            <option value="">-- Select --</option>
                                            @if (Model != null && Model._products != null)
                                            {
                                                foreach (Product product in Model._products)
                                                {
                                                    <option value="@product.ProductId"
                                                            @if (product.ProductId == Model._productId) { <text> selected </text> }>
                                                        @product.ProductName @if (!string.IsNullOrEmpty(product.ProductCode))
                                                        {<text> - @product.ProductCode </text>}
                                                    </option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Warehouse</label>
                                        <select class="form-control" name="WareHouseId" required
                                                onchange="GetProductPartial(); return false;">
                                            <option value="">-- Select --</option>
                                            @if (Model != null && Model._wareHouses != null)
                                            {
                                                foreach (WareHouse wareHouse in Model._wareHouses)
                                                {
                                                    <option value="@wareHouse.WareHouseId">@wareHouse.WareHouseName</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Activity of Stock</label>
                                        <select class="form-control" name="IsStockIncrease" required
                                                onchange="GetProductPartial(); return false;">
                                            <option value="">-- Select --</option>
                                            <option value="true">Stock Increase (+)</option>
                                            <option value="false">Stock Decrease (-)</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Adjustment Reason</label>
                                        <select class="form-control select2" name="AdjustReasonId" required
                                                onchange="ToggleOtherField({ AdjustReasonId: this.value }); return false;">
                                            <option value="">-- Select --</option>
                                            @if (Model != null && Model._adjustReasons != null)
                                            {
                                                foreach (StockAdjustReason reason in Model._adjustReasons)
                                                {
                                                    <option value="@reason.AdjustReasonId">@reason.AdjustReason</option>
                                                }
                                            }
                                            <option value="0">Other</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <input class="form-control" name="AdjustReason" placeholder="Please Specify" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Remarks</label>
                                        <input type="text" class="form-control" name="Remarks" placeholder="Remarks" />
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Adjustment Date</label>
                                        <small>Day/Month/Year</small>
                                        <input type="text" name="StockAdjustDate" class="form-control"
                                               placeholder="Stock Adjust Date" data-mask readonly required
                                               value="@GenericLogic.IstNow.ToDateMaskString()" />
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12" data-stock="adjust">

                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button>
                            <button type="reset" class="btn btn-info"><i class="fas fa-sync"></i> Reset</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
@section BodyScript{
    <script type="text/javascript">
        $(document).ready(() => {
            ToggleOtherField({});
        });

        function ToggleOtherField(obj) {
            var selectedId = (obj.AdjustReasonId != undefined) ? obj.AdjustReasonId : -1;
            var htmlSnip = $('input[name="AdjustReason"]').parent();
            if (selectedId == 0) {
                htmlSnip.show();
                $('input[name="AdjustReason"]').attr('required', true);
            }
            else {
                htmlSnip.hide();
                $('input[name="AdjustReason"]').removeAttr('required');
                $('input[name="AdjustReason"]').val('');
            }
        };

        function GetProductPartial() {
            var ProductId = $('[name="ProductId"]').val() != '' ? $('[name="ProductId"]').val() : 0;
            var WareHouseId = $('[name="WareHouseId"]').val() != '' ? $('[name="WareHouseId"]').val() : 0;
            var IsStockIncrease = $('[name="IsStockIncrease"]').val() != '' ? $('[name="IsStockIncrease"]').val() : null;

            if (ProductId > 0 && WareHouseId > 0 && IsStockIncrease != null) {
                var PostUrl ="@Url.Action("AdjustPartial", "Stock")";
                var objParams = {
                    "ProductId": ProductId,
                    "WareHouseId": WareHouseId,
                    "IsStockIncrease": null
                };
                if (IsStockIncrease == 'true') 
                    objParams.IsStockIncrease = true;
                if (IsStockIncrease == 'false') 
                    objParams.IsStockIncrease = false;

                // Call Partial
                $.ajax({
                    type: "POST",
                    url: PostUrl,
                    data: JSON.stringify(objParams),
                    contentType: "application/json; charset=utf-8",
                    dataType: "text",
                    success: function (data) {
                        $('[data-stock="adjust"]').html(data);
                    },
                    failure: function (response) {
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
                });
            }
        };

        //function RepeatRow() {
        //    var html = $('#d').html();
        //    html = '<tr>' + html + '</tr>';
        //    $('#d').parent('tbody').append(html);
        //};

        //function DeleteRow(e) {
        //    if ($(e).parent('td').parent('tr').parent('tbody').children('tr').length > 1) {
        //        $(e).parent('td').parent('tr').remove().fadeOut();
        //    }
        //};

        @*function Save() {
            var TotalTR = $("tbody[data-tableStockAdjustDetails] tr");
            var stockAdjustDetails = [];
            for (i = 0; i < TotalTR.length; i++) {
                var stockAdjustDetail = {
                    ProductId: parseInt($(TotalTR[i]).find('[name="ProductId"]').val()),
                    AvailableQuantity: parseFloat($(TotalTR[i]).find('[name="AvailableQuantity"]').val()),
                    AdjustQuantity: parseFloat($(TotalTR[i]).find('[name="AdjustQuantity"]').val()),
                    StockDetailId: parseInt($(TotalTR[i]).find('[name="StockDetailId"]').val()),
                    GRNDate: ($(TotalTR[i]).find('[name="GRNDate"]').val()),
                    BatchNo: ($(TotalTR[i]).find('[name="BatchNo"]').val()),
                    ExpiryDate: ($(TotalTR[i]).find('[name="ExpiryDate"]').val()),
                    Description: ($(TotalTR[i]).find('[name="Description"]').val())
                };

                stockAdjustDetails.push(stockAdjustDetail);
            };

            var stockAdjust = {
                AdjustReasonId: parseInt($('[name="AdjustReasonId"]').val()),
                AdjustReason: $('[name="AdjustReason"]').val(),
                StockAdjustDate: $('[name="StockAdjustDate"]').val(),
                WareHouseId: parseInt($('[name="AdjustReasonId"]').val()),
                IsStockIncrease: $('[name="StockAdjustDate"]').val().toString().toLowerCase() == 'true',
                Remarks: $('[name="Remarks"]').val(),
                StockAdjustDetails: stockAdjustDetails
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("Stock", "Adjust")",
                data: JSON.stringify(vardata),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (stockAdjust) {
                    location.href = '@Url.Action("OrderDetail", "Purchase")/' + data + '/Draft';
                },
                failure: function (response) {
                    console.log(response.responseText);
                },
                error: function (response) {
                    console.log(response.responseText);
                }
            });
        };*@
    </script>
}