@using JicoDotNet.Inventory.UI.Models;
@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@model StockModels

<div class="card card-success">
    <div class="card-header bg-danger">
        <h3 class="card-title">Product adjustmnt for stock decrement</h3>
    </div>
    <div class="card-body" style="overflow-x:scroll;">
        <blockquote>
            <p>
                <i class="fas fa-layer-group"></i>
                Total Stock:
                <span style="font-weight:700; margin-left:5px;" class="text-success">
                    @Model._stock.CurrentStock.ToDisplayDecimal()@Model._stock.UnitOfMeasureName
                </span>
            </p>
        </blockquote>
        <table class="table table-striped table-bordered dt-responsive nowrap">
            <thead>
                <tr>
                    @if (Model._selectedProduct != null)
                    {
                        if (Model._selectedProduct.HasBatchNo || Model._selectedProduct.HasExpirationDate || Model._selectedProduct.IsPerishableProduct)
                        {
                            <th>
                                <span>Batch Number /Expiery Date</span>
                            </th>
                        }
                    }
                    <th>
                        Adjust Quantity
                        <span class="pull-right" data-toggle="tooltip" data-placement="top" title="requried">&nbsp;&nbsp;<i class="fas fa-asterisk text-danger"></i></span>
                    </th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @for (int j = 0; j < Model._stock.StockDetails.Count; j++)
                {
                    <tr>
                        @if (Model._selectedProduct != null)
                        {
                            if (Model._selectedProduct.HasBatchNo || Model._selectedProduct.HasExpirationDate || Model._selectedProduct.IsPerishableProduct)
                            {
                                <td>
                                    @if (!string.IsNullOrEmpty(Model._stock.StockDetails[j].BatchNo))
                                    {
                                        <div>
                                            <span>Batch Number:</span>
                                            @Model._stock.StockDetails[j].BatchNo
                                        </div>
                                    }
                                    @if (Model._stock.StockDetails[j].ExpiryDate != null)
                                    {
                                        <div>
                                            <span>Expairy Date:</span>
                                            @Model._stock.StockDetails[j].ExpiryDate.Value.ToDisplayShortDateString()
                                        </div>
                                    }
                                    @if (Model._stock.StockDetails[j].IsPerishable)
                                    {
                                        <div>
                                            <span>
                                                Goods Received Date:
                                                @Model._stock.StockDetails[j].GRNDate.ToDisplayShortDateString()
                                            </span>
                                        </div>
                                    }
                                </td>
                            }
                        }
                        <td>
                            <div style="font-weight: 600;">
                                Current Stock:
                                @Model._stock.StockDetails[j].Stock.ToDisplayDecimal()@Model._stock.UnitOfMeasureName
                            </div>
                            <div class="input-group" style="width:150px;">
                                <input type="number" name="StockAdjustDetails[@j].AdjustQuantity"
                                       class="form-control form-control-sm" value="0" step="0.00001"
                                       min="0" max="@Model._stock.StockDetails[j].Stock.ToDisplayDecimal()"
                                       placeholder="Qty" required />
                                <div class="input-group-append" style="height: 31px;">
                                    <span class="input-group-text">@Model._stock.UnitOfMeasureName</span>
                                </div>
                            </div>
                        </td>
                        <td>
                            <input type="text" name="StockAdjustDetails[@j].Description"
                                   class="form-control form-control-sm" placeholder="Adjust Remarks" />

                            <input type="hidden" name="StockAdjustDetails[@j].ProductId" value="@Model._stock.ProductId" />
                            <input type="hidden" name="StockAdjustDetails[@j].AvailableQuantity" value="@Model._stock.CurrentStock" />
                            <input type="hidden" name="StockAdjustDetails[@j].StockDetailId" value="@Model._stock.StockDetails[j].StockDetailId" />
                            <input type="hidden" name="StockAdjustDetails[@j].IsPerishable" value="@Model._stock.StockDetails[j].IsPerishable.ToString().ToLower()" />
                            <input type="hidden" name="StockAdjustDetails[@j].ExpiryDate" value="@(Model._stock.StockDetails[j].ExpiryDate !=null ? Model._stock.StockDetails[j].ExpiryDate.Value.ToDateMaskString() : string.Empty)" />
                            <input type="hidden" name="StockAdjustDetails[@j].BatchNo" value="@Model._stock.StockDetails[j].BatchNo" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script type="text/javascript">
    try {
        $('input.form-control-sm, select.form-control-sm').parent('div.input-group').children('div.input-group-prepend, div.input-group-append').css("height", "31px");
        LoadInputDate();
    } catch (e) { console.log(e); }
</script>