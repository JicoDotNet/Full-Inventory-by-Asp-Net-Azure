@using JicoDotNet.Inventory.UI.Models;
@using JicoDotNet.Inventory.BusinessLayer.DTO.Class;
@using JicoDotNet.Inventory.Core.Models
@model UnitOfMeasureModels

@{
    ViewBag.Title = "Measurement Unit";
    Layout = "~/Views/Shared/_LayoutMaster.cshtml";
}

<section class="content-header" data-lang-sector="Section-Header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1><span data-lang-key="MeasureUnit-Header">Measurement Unit</span></h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")" data-lang-key="Home">Home</a></li>
                    <li class="breadcrumb-item active"><a href="@Url.Action("Unit","Measure")">Measurement Unit</a></li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content" data-lang-sector="Document-MeasureUnit">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-danger">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title">
                            @if (Model._unitOfMeasure != null)
                            {
                                <span data-lang-key="Title-Update"> Update </span>
                            }
                            else
                            {
                                <span data-lang-key="Title-Add"> Add </span>
                            }
                            <span data-lang-key="Title">Measurement Unit</span>
                        </h3>
                    </div>
                    @using (Html.BeginForm("Unit", "Measure",
                            new
                            {
                                id = ((Model._unitOfMeasure != null) ?
                                Html.UrlIdEncrypt(Model._unitOfMeasure.UnitOfMeasureId.ToString(), false) : string.Empty)
                            },
                            FormMethod.Post, new { autocomplete = "off" }))
                    {
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>
                                            <span data-lang-key="Label-UnitOfMeasureName">Unit Name (short: like Kg, Lt)</span>
                                        </label>
                                        <input type="text" name="UnitOfMeasureName" class="form-control" maxlength="4"
                                               @if (Model._unitOfMeasure != null) { <text> value="@(Model._unitOfMeasure.UnitOfMeasureName)" </text> }
                                               placeholder="Measurement Unit (max 4 characters)" required>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>
                                            <span data-lang-key="Label-Description">Measurement Unit Details</span>
                                        </label>
                                        <textarea name="Description" class="form-control" placeholder="Enter Measurement Unit Details" required style="height:38px;">@if (Model._unitOfMeasure != null) { <text> @Model._unitOfMeasure.Description </text>  }</textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            @if (Model._unitOfMeasure != null)
                            {
                                <button type="submit" class="btn btn-warning">
                                    <i class="fas fa-edit"></i>
                                    <span data-lang-key="Form-Action-Update">Update</span>
                                </button>
                                <a href="@Url.Action("Unit", "Measure", new { id = string.Empty })" class="btn btn-danger">
                                    <i class="fas fa-times"></i>
                                    <span data-lang-key="Form-Action-Cancel">Cancel</span>
                                </a>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i>
                                    <span data-lang-key="Form-Action-Save">Save</span>
                                </button>
                            }
                            <button type="reset" class="btn btn-info">
                                <i class="fas fa-sync"></i>
                                <span data-lang-key="Form-Action-Reset">Reset</span>
                            </button>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-12">
                <div class="card card-danger">
                    <div class="card-header bg-cyan">
                        <h3 class="card-title" data-lang-key="Table-Title">Measurement Units</h3>
                    </div>
                    <div class="card-body">
                        <table class="table table-striped table-bordered dt-responsive nowrap" data-table="normal">
                            <thead>
                                <tr>
                                    <th data-lang-key="Table-Action">Edit/Deactivate</th>
                                    <th data-lang-key="Table-MeasureUnit">Measurement Unit</th>
                                    <th data-lang-key="Table-Details">Measurement Unit Details</th>
                                    <th data-lang-key="Table-Status">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model._unitOfMeasures != null)
                                {
                                    foreach (UnitOfMeasure unitOfMeasure in Model._unitOfMeasures.OrderByDescending(a => a.IsActive).ToList())
                                    {
                                        <tr>
                                            <td>
                                                @if (unitOfMeasure.IsActive)
                                                {
                                                    <a class="btn btn-outline-success btn-flat" href="@Url.Action("Unit", "Measure", new { id = Html.UrlIdEncrypt(unitOfMeasure.UnitOfMeasureId, false) })"
                                                       data-toggle="tooltip" data-placement="top" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button onclick="DeactivateRecord(this)"
                                                            data-display="Measurement Unit Name" data-value="@unitOfMeasure.UnitOfMeasureName"
                                                            data-controller="Measure" data-action="Deactivate"
                                                            data-id="@Html.UrlIdEncrypt(unitOfMeasure.UnitOfMeasureId)"
                                                            data-toggle="tooltip" data-placement="top"
                                                            class="btn btn-outline-danger btn-flat" title="Deactivate">
                                                        <i class="fas fa-trash-alt pull-right"></i>
                                                    </button>
                                                }
                                            </td>
                                            <td>@unitOfMeasure.UnitOfMeasureName</td>
                                            <td>@unitOfMeasure.Description</td>
                                            <td>
                                                @if (unitOfMeasure.IsActive)
                                                {
                                                    <span class="right badge badge-success" data-lang-key="Table-Status-Active">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="right badge badge-danger" data-lang-key="Table-Status-Inactive">Inactive</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>